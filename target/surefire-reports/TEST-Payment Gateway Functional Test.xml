<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="Payment Gateway Functional Test" time="0.183" tests="9" errors="9" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="18"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/Users/seraytugcu/IdeaProjects/SerayRenasTechBDDTestingProject/target/test-classes:/Users/seraytugcu/IdeaProjects/SerayRenasTechBDDTestingProject/target/classes:/Users/seraytugcu/.m2/repository/org/seleniumhq/selenium/selenium-java/3.141.59/selenium-java-3.141.59.jar:/Users/seraytugcu/.m2/repository/org/seleniumhq/selenium/selenium-api/3.141.59/selenium-api-3.141.59.jar:/Users/seraytugcu/.m2/repository/org/seleniumhq/selenium/selenium-chrome-driver/3.141.59/selenium-chrome-driver-3.141.59.jar:/Users/seraytugcu/.m2/repository/org/seleniumhq/selenium/selenium-edge-driver/3.141.59/selenium-edge-driver-3.141.59.jar:/Users/seraytugcu/.m2/repository/org/seleniumhq/selenium/selenium-firefox-driver/3.141.59/selenium-firefox-driver-3.141.59.jar:/Users/seraytugcu/.m2/repository/org/seleniumhq/selenium/selenium-ie-driver/3.141.59/selenium-ie-driver-3.141.59.jar:/Users/seraytugcu/.m2/repository/org/seleniumhq/selenium/selenium-opera-driver/3.141.59/selenium-opera-driver-3.141.59.jar:/Users/seraytugcu/.m2/repository/org/seleniumhq/selenium/selenium-remote-driver/3.141.59/selenium-remote-driver-3.141.59.jar:/Users/seraytugcu/.m2/repository/org/seleniumhq/selenium/selenium-safari-driver/3.141.59/selenium-safari-driver-3.141.59.jar:/Users/seraytugcu/.m2/repository/org/seleniumhq/selenium/selenium-support/3.141.59/selenium-support-3.141.59.jar:/Users/seraytugcu/.m2/repository/net/bytebuddy/byte-buddy/1.8.15/byte-buddy-1.8.15.jar:/Users/seraytugcu/.m2/repository/org/apache/commons/commons-exec/1.3/commons-exec-1.3.jar:/Users/seraytugcu/.m2/repository/com/google/guava/guava/25.0-jre/guava-25.0-jre.jar:/Users/seraytugcu/.m2/repository/com/google/code/findbugs/jsr305/1.3.9/jsr305-1.3.9.jar:/Users/seraytugcu/.m2/repository/org/checkerframework/checker-compat-qual/2.0.0/checker-compat-qual-2.0.0.jar:/Users/seraytugcu/.m2/repository/com/google/errorprone/error_prone_annotations/2.1.3/error_prone_annotations-2.1.3.jar:/Users/seraytugcu/.m2/repository/com/google/j2objc/j2objc-annotations/1.1/j2objc-annotations-1.1.jar:/Users/seraytugcu/.m2/repository/org/codehaus/mojo/animal-sniffer-annotations/1.14/animal-sniffer-annotations-1.14.jar:/Users/seraytugcu/.m2/repository/com/squareup/okhttp3/okhttp/3.11.0/okhttp-3.11.0.jar:/Users/seraytugcu/.m2/repository/com/squareup/okio/okio/1.14.0/okio-1.14.0.jar:/Users/seraytugcu/.m2/repository/io/cucumber/cucumber-java/7.0.0/cucumber-java-7.0.0.jar:/Users/seraytugcu/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/Users/seraytugcu/.m2/repository/io/cucumber/cucumber-junit/7.0.0/cucumber-junit-7.0.0.jar:/Users/seraytugcu/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/Users/seraytugcu/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/seraytugcu/.m2/repository/io/cucumber/cucumber-core/7.0.0/cucumber-core-7.0.0.jar:/Users/seraytugcu/.m2/repository/io/cucumber/cucumber-gherkin/7.0.0/cucumber-gherkin-7.0.0.jar:/Users/seraytugcu/.m2/repository/io/cucumber/cucumber-gherkin-messages/7.0.0/cucumber-gherkin-messages-7.0.0.jar:/Users/seraytugcu/.m2/repository/io/cucumber/messages/17.1.1/messages-17.1.1.jar:/Users/seraytugcu/.m2/repository/io/cucumber/tag-expressions/4.0.2/tag-expressions-4.0.2.jar:/Users/seraytugcu/.m2/repository/io/cucumber/cucumber-expressions/13.0.1/cucumber-expressions-13.0.1.jar:/Users/seraytugcu/.m2/repository/io/cucumber/datatable/7.0.0/datatable-7.0.0.jar:/Users/seraytugcu/.m2/repository/io/cucumber/cucumber-plugin/7.0.0/cucumber-plugin-7.0.0.jar:/Users/seraytugcu/.m2/repository/io/cucumber/docstring/7.0.0/docstring-7.0.0.jar:/Users/seraytugcu/.m2/repository/io/cucumber/html-formatter/17.0.0/html-formatter-17.0.0.jar:/Users/seraytugcu/.m2/repository/io/cucumber/create-meta/6.0.1/create-meta-6.0.1.jar:/Users/seraytugcu/.m2/repository/io/github/bonigarcia/webdrivermanager/5.0.3/webdrivermanager-5.0.3.jar:/Users/seraytugcu/.m2/repository/org/slf4j/slf4j-api/1.7.32/slf4j-api-1.7.32.jar:/Users/seraytugcu/.m2/repository/com/google/code/gson/gson/2.8.8/gson-2.8.8.jar:/Users/seraytugcu/.m2/repository/org/jsoup/jsoup/1.14.2/jsoup-1.14.2.jar:/Users/seraytugcu/.m2/repository/com/github/docker-java/docker-java/3.2.12/docker-java-3.2.12.jar:/Users/seraytugcu/.m2/repository/com/github/docker-java/docker-java-core/3.2.12/docker-java-core-3.2.12.jar:/Users/seraytugcu/.m2/repository/com/github/docker-java/docker-java-api/3.2.12/docker-java-api-3.2.12.jar:/Users/seraytugcu/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.3/jackson-annotations-2.10.3.jar:/Users/seraytugcu/.m2/repository/commons-lang/commons-lang/2.6/commons-lang-2.6.jar:/Users/seraytugcu/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.3/jackson-databind-2.10.3.jar:/Users/seraytugcu/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.3/jackson-core-2.10.3.jar:/Users/seraytugcu/.m2/repository/org/slf4j/jcl-over-slf4j/1.7.30/jcl-over-slf4j-1.7.30.jar:/Users/seraytugcu/.m2/repository/com/github/docker-java/docker-java-transport-httpclient5/3.2.12/docker-java-transport-httpclient5-3.2.12.jar:/Users/seraytugcu/.m2/repository/com/github/docker-java/docker-java-transport/3.2.12/docker-java-transport-3.2.12.jar:/Users/seraytugcu/.m2/repository/org/apache/httpcomponents/client5/httpclient5/5.0.3/httpclient5-5.0.3.jar:/Users/seraytugcu/.m2/repository/org/apache/httpcomponents/core5/httpcore5/5.0.2/httpcore5-5.0.2.jar:/Users/seraytugcu/.m2/repository/net/java/dev/jna/jna/5.8.0/jna-5.8.0.jar:/Users/seraytugcu/.m2/repository/org/brotli/dec/0.1.2/dec-0.1.2.jar:/Users/seraytugcu/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/Users/seraytugcu/.m2/repository/org/apache/poi/poi-ooxml/5.0.0/poi-ooxml-5.0.0.jar:/Users/seraytugcu/.m2/repository/org/apache/poi/poi/5.0.0/poi-5.0.0.jar:/Users/seraytugcu/.m2/repository/commons-codec/commons-codec/1.15/commons-codec-1.15.jar:/Users/seraytugcu/.m2/repository/org/apache/commons/commons-collections4/4.4/commons-collections4-4.4.jar:/Users/seraytugcu/.m2/repository/org/apache/commons/commons-math3/3.6.1/commons-math3-3.6.1.jar:/Users/seraytugcu/.m2/repository/com/zaxxer/SparseBitSet/1.2/SparseBitSet-1.2.jar:/Users/seraytugcu/.m2/repository/org/apache/poi/poi-ooxml-lite/5.0.0/poi-ooxml-lite-5.0.0.jar:/Users/seraytugcu/.m2/repository/org/apache/xmlbeans/xmlbeans/4.0.0/xmlbeans-4.0.0.jar:/Users/seraytugcu/.m2/repository/org/apache/commons/commons-compress/1.20/commons-compress-1.20.jar:/Users/seraytugcu/.m2/repository/com/github/virtuald/curvesapi/1.06/curvesapi-1.06.jar:/Users/seraytugcu/.m2/repository/org/bouncycastle/bcpkix-jdk15on/1.68/bcpkix-jdk15on-1.68.jar:/Users/seraytugcu/.m2/repository/org/bouncycastle/bcprov-jdk15on/1.68/bcprov-jdk15on-1.68.jar:/Users/seraytugcu/.m2/repository/org/apache/santuario/xmlsec/2.2.1/xmlsec-2.2.1.jar:/Users/seraytugcu/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.2.1/woodstox-core-5.2.1.jar:/Users/seraytugcu/.m2/repository/org/codehaus/woodstox/stax2-api/4.2/stax2-api-4.2.jar:/Users/seraytugcu/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/2.3.2/jakarta.xml.bind-api-2.3.2.jar:/Users/seraytugcu/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.1/jakarta.activation-api-1.2.1.jar:/Users/seraytugcu/.m2/repository/org/apache/xmlgraphics/batik-all/1.13/batik-all-1.13.jar:/Users/seraytugcu/.m2/repository/org/apache/xmlgraphics/batik-anim/1.13/batik-anim-1.13.jar:/Users/seraytugcu/.m2/repository/org/apache/xmlgraphics/batik-shared-resources/1.13/batik-shared-resources-1.13.jar:/Users/seraytugcu/.m2/repository/xml-apis/xml-apis-ext/1.3.04/xml-apis-ext-1.3.04.jar:/Users/seraytugcu/.m2/repository/org/apache/xmlgraphics/batik-awt-util/1.13/batik-awt-util-1.13.jar:/Users/seraytugcu/.m2/repository/org/apache/xmlgraphics/xmlgraphics-commons/2.4/xmlgraphics-commons-2.4.jar:/Users/seraytugcu/.m2/repository/org/apache/xmlgraphics/batik-bridge/1.13/batik-bridge-1.13.jar:/Users/seraytugcu/.m2/repository/org/apache/xmlgraphics/batik-codec/1.13/batik-codec-1.13.jar:/Users/seraytugcu/.m2/repository/org/apache/xmlgraphics/batik-constants/1.13/batik-constants-1.13.jar:/Users/seraytugcu/.m2/repository/org/apache/xmlgraphics/batik-css/1.13/batik-css-1.13.jar:/Users/seraytugcu/.m2/repository/org/apache/xmlgraphics/batik-dom/1.13/batik-dom-1.13.jar:/Users/seraytugcu/.m2/repository/xalan/xalan/2.7.2/xalan-2.7.2.jar:/Users/seraytugcu/.m2/repository/xalan/serializer/2.7.2/serializer-2.7.2.jar:/Users/seraytugcu/.m2/repository/xml-apis/xml-apis/1.4.01/xml-apis-1.4.01.jar:/Users/seraytugcu/.m2/repository/org/apache/xmlgraphics/batik-ext/1.13/batik-ext-1.13.jar:/Users/seraytugcu/.m2/repository/org/apache/xmlgraphics/batik-extension/1.13/batik-extension-1.13.jar:/Users/seraytugcu/.m2/repository/org/apache/xmlgraphics/batik-gui-util/1.13/batik-gui-util-1.13.jar:/Users/seraytugcu/.m2/repository/org/apache/xmlgraphics/batik-gvt/1.13/batik-gvt-1.13.jar:/Users/seraytugcu/.m2/repository/org/apache/xmlgraphics/batik-i18n/1.13/batik-i18n-1.13.jar:/Users/seraytugcu/.m2/repository/org/apache/xmlgraphics/batik-parser/1.13/batik-parser-1.13.jar:/Users/seraytugcu/.m2/repository/org/apache/xmlgraphics/batik-rasterizer-ext/1.13/batik-rasterizer-ext-1.13.jar:/Users/seraytugcu/.m2/repository/org/apache/xmlgraphics/batik-rasterizer/1.13/batik-rasterizer-1.13.jar:/Users/seraytugcu/.m2/repository/org/apache/xmlgraphics/batik-script/1.13/batik-script-1.13.jar:/Users/seraytugcu/.m2/repository/org/apache/xmlgraphics/batik-slideshow/1.13/batik-slideshow-1.13.jar:/Users/seraytugcu/.m2/repository/org/apache/xmlgraphics/batik-squiggle-ext/1.13/batik-squiggle-ext-1.13.jar:/Users/seraytugcu/.m2/repository/org/apache/xmlgraphics/batik-squiggle/1.13/batik-squiggle-1.13.jar:/Users/seraytugcu/.m2/repository/org/apache/xmlgraphics/batik-svg-dom/1.13/batik-svg-dom-1.13.jar:/Users/seraytugcu/.m2/repository/org/apache/xmlgraphics/batik-svgbrowser/1.13/batik-svgbrowser-1.13.jar:/Users/seraytugcu/.m2/repository/org/apache/xmlgraphics/batik-svggen/1.13/batik-svggen-1.13.jar:/Users/seraytugcu/.m2/repository/org/apache/xmlgraphics/batik-svgpp/1.13/batik-svgpp-1.13.jar:/Users/seraytugcu/.m2/repository/org/apache/xmlgraphics/batik-svgrasterizer/1.13/batik-svgrasterizer-1.13.jar:/Users/seraytugcu/.m2/repository/org/apache/xmlgraphics/batik-swing/1.13/batik-swing-1.13.jar:/Users/seraytugcu/.m2/repository/org/apache/xmlgraphics/batik-transcoder/1.13/batik-transcoder-1.13.jar:/Users/seraytugcu/.m2/repository/org/apache/xmlgraphics/batik-util/1.13/batik-util-1.13.jar:/Users/seraytugcu/.m2/repository/org/apache/xmlgraphics/batik-ttf2svg/1.13/batik-ttf2svg-1.13.jar:/Users/seraytugcu/.m2/repository/org/apache/xmlgraphics/batik-xml/1.13/batik-xml-1.13.jar:/Users/seraytugcu/.m2/repository/de/rototor/pdfbox/graphics2d/0.30/graphics2d-0.30.jar:/Users/seraytugcu/.m2/repository/org/apache/pdfbox/pdfbox/2.0.22/pdfbox-2.0.22.jar:/Users/seraytugcu/.m2/repository/org/apache/pdfbox/fontbox/2.0.22/fontbox-2.0.22.jar:/Users/seraytugcu/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar:"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.vendor.url" value="https://java.oracle.com/"/>
    <property name="user.timezone" value="America/Toronto"/>
    <property name="os.name" value="Mac OS X"/>
    <property name="java.vm.specification.version" value="18"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="CA"/>
    <property name="sun.boot.library.path" value="/Library/Java/JavaVirtualMachines/jdk-18.jdk/Contents/Home/lib"/>
    <property name="sun.java.command" value="/Users/seraytugcu/IdeaProjects/SerayRenasTechBDDTestingProject/target/surefire/surefirebooter17595269559494872480.jar /Users/seraytugcu/IdeaProjects/SerayRenasTechBDDTestingProject/target/surefire 2022-10-31T23-49-47_142-jvmRun1 surefire213026415212486380tmp surefire_010361558966518641002tmp"/>
    <property name="http.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="/Users/seraytugcu/IdeaProjects/SerayRenasTechBDDTestingProject/target/test-classes:/Users/seraytugcu/IdeaProjects/SerayRenasTechBDDTestingProject/target/classes:/Users/seraytugcu/.m2/repository/org/seleniumhq/selenium/selenium-java/3.141.59/selenium-java-3.141.59.jar:/Users/seraytugcu/.m2/repository/org/seleniumhq/selenium/selenium-api/3.141.59/selenium-api-3.141.59.jar:/Users/seraytugcu/.m2/repository/org/seleniumhq/selenium/selenium-chrome-driver/3.141.59/selenium-chrome-driver-3.141.59.jar:/Users/seraytugcu/.m2/repository/org/seleniumhq/selenium/selenium-edge-driver/3.141.59/selenium-edge-driver-3.141.59.jar:/Users/seraytugcu/.m2/repository/org/seleniumhq/selenium/selenium-firefox-driver/3.141.59/selenium-firefox-driver-3.141.59.jar:/Users/seraytugcu/.m2/repository/org/seleniumhq/selenium/selenium-ie-driver/3.141.59/selenium-ie-driver-3.141.59.jar:/Users/seraytugcu/.m2/repository/org/seleniumhq/selenium/selenium-opera-driver/3.141.59/selenium-opera-driver-3.141.59.jar:/Users/seraytugcu/.m2/repository/org/seleniumhq/selenium/selenium-remote-driver/3.141.59/selenium-remote-driver-3.141.59.jar:/Users/seraytugcu/.m2/repository/org/seleniumhq/selenium/selenium-safari-driver/3.141.59/selenium-safari-driver-3.141.59.jar:/Users/seraytugcu/.m2/repository/org/seleniumhq/selenium/selenium-support/3.141.59/selenium-support-3.141.59.jar:/Users/seraytugcu/.m2/repository/net/bytebuddy/byte-buddy/1.8.15/byte-buddy-1.8.15.jar:/Users/seraytugcu/.m2/repository/org/apache/commons/commons-exec/1.3/commons-exec-1.3.jar:/Users/seraytugcu/.m2/repository/com/google/guava/guava/25.0-jre/guava-25.0-jre.jar:/Users/seraytugcu/.m2/repository/com/google/code/findbugs/jsr305/1.3.9/jsr305-1.3.9.jar:/Users/seraytugcu/.m2/repository/org/checkerframework/checker-compat-qual/2.0.0/checker-compat-qual-2.0.0.jar:/Users/seraytugcu/.m2/repository/com/google/errorprone/error_prone_annotations/2.1.3/error_prone_annotations-2.1.3.jar:/Users/seraytugcu/.m2/repository/com/google/j2objc/j2objc-annotations/1.1/j2objc-annotations-1.1.jar:/Users/seraytugcu/.m2/repository/org/codehaus/mojo/animal-sniffer-annotations/1.14/animal-sniffer-annotations-1.14.jar:/Users/seraytugcu/.m2/repository/com/squareup/okhttp3/okhttp/3.11.0/okhttp-3.11.0.jar:/Users/seraytugcu/.m2/repository/com/squareup/okio/okio/1.14.0/okio-1.14.0.jar:/Users/seraytugcu/.m2/repository/io/cucumber/cucumber-java/7.0.0/cucumber-java-7.0.0.jar:/Users/seraytugcu/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/Users/seraytugcu/.m2/repository/io/cucumber/cucumber-junit/7.0.0/cucumber-junit-7.0.0.jar:/Users/seraytugcu/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/Users/seraytugcu/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/seraytugcu/.m2/repository/io/cucumber/cucumber-core/7.0.0/cucumber-core-7.0.0.jar:/Users/seraytugcu/.m2/repository/io/cucumber/cucumber-gherkin/7.0.0/cucumber-gherkin-7.0.0.jar:/Users/seraytugcu/.m2/repository/io/cucumber/cucumber-gherkin-messages/7.0.0/cucumber-gherkin-messages-7.0.0.jar:/Users/seraytugcu/.m2/repository/io/cucumber/messages/17.1.1/messages-17.1.1.jar:/Users/seraytugcu/.m2/repository/io/cucumber/tag-expressions/4.0.2/tag-expressions-4.0.2.jar:/Users/seraytugcu/.m2/repository/io/cucumber/cucumber-expressions/13.0.1/cucumber-expressions-13.0.1.jar:/Users/seraytugcu/.m2/repository/io/cucumber/datatable/7.0.0/datatable-7.0.0.jar:/Users/seraytugcu/.m2/repository/io/cucumber/cucumber-plugin/7.0.0/cucumber-plugin-7.0.0.jar:/Users/seraytugcu/.m2/repository/io/cucumber/docstring/7.0.0/docstring-7.0.0.jar:/Users/seraytugcu/.m2/repository/io/cucumber/html-formatter/17.0.0/html-formatter-17.0.0.jar:/Users/seraytugcu/.m2/repository/io/cucumber/create-meta/6.0.1/create-meta-6.0.1.jar:/Users/seraytugcu/.m2/repository/io/github/bonigarcia/webdrivermanager/5.0.3/webdrivermanager-5.0.3.jar:/Users/seraytugcu/.m2/repository/org/slf4j/slf4j-api/1.7.32/slf4j-api-1.7.32.jar:/Users/seraytugcu/.m2/repository/com/google/code/gson/gson/2.8.8/gson-2.8.8.jar:/Users/seraytugcu/.m2/repository/org/jsoup/jsoup/1.14.2/jsoup-1.14.2.jar:/Users/seraytugcu/.m2/repository/com/github/docker-java/docker-java/3.2.12/docker-java-3.2.12.jar:/Users/seraytugcu/.m2/repository/com/github/docker-java/docker-java-core/3.2.12/docker-java-core-3.2.12.jar:/Users/seraytugcu/.m2/repository/com/github/docker-java/docker-java-api/3.2.12/docker-java-api-3.2.12.jar:/Users/seraytugcu/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.3/jackson-annotations-2.10.3.jar:/Users/seraytugcu/.m2/repository/commons-lang/commons-lang/2.6/commons-lang-2.6.jar:/Users/seraytugcu/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.3/jackson-databind-2.10.3.jar:/Users/seraytugcu/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.3/jackson-core-2.10.3.jar:/Users/seraytugcu/.m2/repository/org/slf4j/jcl-over-slf4j/1.7.30/jcl-over-slf4j-1.7.30.jar:/Users/seraytugcu/.m2/repository/com/github/docker-java/docker-java-transport-httpclient5/3.2.12/docker-java-transport-httpclient5-3.2.12.jar:/Users/seraytugcu/.m2/repository/com/github/docker-java/docker-java-transport/3.2.12/docker-java-transport-3.2.12.jar:/Users/seraytugcu/.m2/repository/org/apache/httpcomponents/client5/httpclient5/5.0.3/httpclient5-5.0.3.jar:/Users/seraytugcu/.m2/repository/org/apache/httpcomponents/core5/httpcore5/5.0.2/httpcore5-5.0.2.jar:/Users/seraytugcu/.m2/repository/net/java/dev/jna/jna/5.8.0/jna-5.8.0.jar:/Users/seraytugcu/.m2/repository/org/brotli/dec/0.1.2/dec-0.1.2.jar:/Users/seraytugcu/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/Users/seraytugcu/.m2/repository/org/apache/poi/poi-ooxml/5.0.0/poi-ooxml-5.0.0.jar:/Users/seraytugcu/.m2/repository/org/apache/poi/poi/5.0.0/poi-5.0.0.jar:/Users/seraytugcu/.m2/repository/commons-codec/commons-codec/1.15/commons-codec-1.15.jar:/Users/seraytugcu/.m2/repository/org/apache/commons/commons-collections4/4.4/commons-collections4-4.4.jar:/Users/seraytugcu/.m2/repository/org/apache/commons/commons-math3/3.6.1/commons-math3-3.6.1.jar:/Users/seraytugcu/.m2/repository/com/zaxxer/SparseBitSet/1.2/SparseBitSet-1.2.jar:/Users/seraytugcu/.m2/repository/org/apache/poi/poi-ooxml-lite/5.0.0/poi-ooxml-lite-5.0.0.jar:/Users/seraytugcu/.m2/repository/org/apache/xmlbeans/xmlbeans/4.0.0/xmlbeans-4.0.0.jar:/Users/seraytugcu/.m2/repository/org/apache/commons/commons-compress/1.20/commons-compress-1.20.jar:/Users/seraytugcu/.m2/repository/com/github/virtuald/curvesapi/1.06/curvesapi-1.06.jar:/Users/seraytugcu/.m2/repository/org/bouncycastle/bcpkix-jdk15on/1.68/bcpkix-jdk15on-1.68.jar:/Users/seraytugcu/.m2/repository/org/bouncycastle/bcprov-jdk15on/1.68/bcprov-jdk15on-1.68.jar:/Users/seraytugcu/.m2/repository/org/apache/santuario/xmlsec/2.2.1/xmlsec-2.2.1.jar:/Users/seraytugcu/.m2/repository/com/fasterxml/woodstox/woodstox-core/5.2.1/woodstox-core-5.2.1.jar:/Users/seraytugcu/.m2/repository/org/codehaus/woodstox/stax2-api/4.2/stax2-api-4.2.jar:/Users/seraytugcu/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/2.3.2/jakarta.xml.bind-api-2.3.2.jar:/Users/seraytugcu/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.1/jakarta.activation-api-1.2.1.jar:/Users/seraytugcu/.m2/repository/org/apache/xmlgraphics/batik-all/1.13/batik-all-1.13.jar:/Users/seraytugcu/.m2/repository/org/apache/xmlgraphics/batik-anim/1.13/batik-anim-1.13.jar:/Users/seraytugcu/.m2/repository/org/apache/xmlgraphics/batik-shared-resources/1.13/batik-shared-resources-1.13.jar:/Users/seraytugcu/.m2/repository/xml-apis/xml-apis-ext/1.3.04/xml-apis-ext-1.3.04.jar:/Users/seraytugcu/.m2/repository/org/apache/xmlgraphics/batik-awt-util/1.13/batik-awt-util-1.13.jar:/Users/seraytugcu/.m2/repository/org/apache/xmlgraphics/xmlgraphics-commons/2.4/xmlgraphics-commons-2.4.jar:/Users/seraytugcu/.m2/repository/org/apache/xmlgraphics/batik-bridge/1.13/batik-bridge-1.13.jar:/Users/seraytugcu/.m2/repository/org/apache/xmlgraphics/batik-codec/1.13/batik-codec-1.13.jar:/Users/seraytugcu/.m2/repository/org/apache/xmlgraphics/batik-constants/1.13/batik-constants-1.13.jar:/Users/seraytugcu/.m2/repository/org/apache/xmlgraphics/batik-css/1.13/batik-css-1.13.jar:/Users/seraytugcu/.m2/repository/org/apache/xmlgraphics/batik-dom/1.13/batik-dom-1.13.jar:/Users/seraytugcu/.m2/repository/xalan/xalan/2.7.2/xalan-2.7.2.jar:/Users/seraytugcu/.m2/repository/xalan/serializer/2.7.2/serializer-2.7.2.jar:/Users/seraytugcu/.m2/repository/xml-apis/xml-apis/1.4.01/xml-apis-1.4.01.jar:/Users/seraytugcu/.m2/repository/org/apache/xmlgraphics/batik-ext/1.13/batik-ext-1.13.jar:/Users/seraytugcu/.m2/repository/org/apache/xmlgraphics/batik-extension/1.13/batik-extension-1.13.jar:/Users/seraytugcu/.m2/repository/org/apache/xmlgraphics/batik-gui-util/1.13/batik-gui-util-1.13.jar:/Users/seraytugcu/.m2/repository/org/apache/xmlgraphics/batik-gvt/1.13/batik-gvt-1.13.jar:/Users/seraytugcu/.m2/repository/org/apache/xmlgraphics/batik-i18n/1.13/batik-i18n-1.13.jar:/Users/seraytugcu/.m2/repository/org/apache/xmlgraphics/batik-parser/1.13/batik-parser-1.13.jar:/Users/seraytugcu/.m2/repository/org/apache/xmlgraphics/batik-rasterizer-ext/1.13/batik-rasterizer-ext-1.13.jar:/Users/seraytugcu/.m2/repository/org/apache/xmlgraphics/batik-rasterizer/1.13/batik-rasterizer-1.13.jar:/Users/seraytugcu/.m2/repository/org/apache/xmlgraphics/batik-script/1.13/batik-script-1.13.jar:/Users/seraytugcu/.m2/repository/org/apache/xmlgraphics/batik-slideshow/1.13/batik-slideshow-1.13.jar:/Users/seraytugcu/.m2/repository/org/apache/xmlgraphics/batik-squiggle-ext/1.13/batik-squiggle-ext-1.13.jar:/Users/seraytugcu/.m2/repository/org/apache/xmlgraphics/batik-squiggle/1.13/batik-squiggle-1.13.jar:/Users/seraytugcu/.m2/repository/org/apache/xmlgraphics/batik-svg-dom/1.13/batik-svg-dom-1.13.jar:/Users/seraytugcu/.m2/repository/org/apache/xmlgraphics/batik-svgbrowser/1.13/batik-svgbrowser-1.13.jar:/Users/seraytugcu/.m2/repository/org/apache/xmlgraphics/batik-svggen/1.13/batik-svggen-1.13.jar:/Users/seraytugcu/.m2/repository/org/apache/xmlgraphics/batik-svgpp/1.13/batik-svgpp-1.13.jar:/Users/seraytugcu/.m2/repository/org/apache/xmlgraphics/batik-svgrasterizer/1.13/batik-svgrasterizer-1.13.jar:/Users/seraytugcu/.m2/repository/org/apache/xmlgraphics/batik-swing/1.13/batik-swing-1.13.jar:/Users/seraytugcu/.m2/repository/org/apache/xmlgraphics/batik-transcoder/1.13/batik-transcoder-1.13.jar:/Users/seraytugcu/.m2/repository/org/apache/xmlgraphics/batik-util/1.13/batik-util-1.13.jar:/Users/seraytugcu/.m2/repository/org/apache/xmlgraphics/batik-ttf2svg/1.13/batik-ttf2svg-1.13.jar:/Users/seraytugcu/.m2/repository/org/apache/xmlgraphics/batik-xml/1.13/batik-xml-1.13.jar:/Users/seraytugcu/.m2/repository/de/rototor/pdfbox/graphics2d/0.30/graphics2d-0.30.jar:/Users/seraytugcu/.m2/repository/org/apache/pdfbox/pdfbox/2.0.22/pdfbox-2.0.22.jar:/Users/seraytugcu/.m2/repository/org/apache/pdfbox/fontbox/2.0.22/fontbox-2.0.22.jar:/Users/seraytugcu/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar:"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/Users/seraytugcu"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2022-03-22"/>
    <property name="java.home" value="/Library/Java/JavaVirtualMachines/jdk-18.jdk/Contents/Home"/>
    <property name="file.separator" value="/"/>
    <property name="basedir" value="/Users/seraytugcu/IdeaProjects/SerayRenasTechBDDTestingProject"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="apple.awt.application.name" value="ForkedBooter"/>
    <property name="surefire.real.class.path" value="/Users/seraytugcu/IdeaProjects/SerayRenasTechBDDTestingProject/target/surefire/surefirebooter17595269559494872480.jar"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="ftp.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="java.runtime.version" value="18+36-2087"/>
    <property name="user.name" value="seraytugcu"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="12.6"/>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="localRepository" value="/Users/seraytugcu/.m2/repository"/>
    <property name="java.vendor.url.bug" value="https://bugreport.java.com/bugreport/"/>
    <property name="java.io.tmpdir" value="/var/folders/qn/wx3ncyn10bs65vtdf7w1hxsw0000gn/T/"/>
    <property name="idea.version" value="2021.3.3"/>
    <property name="java.version" value="18"/>
    <property name="user.dir" value="/Users/seraytugcu/IdeaProjects/SerayRenasTechBDDTestingProject"/>
    <property name="os.arch" value="aarch64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="native.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/Users/seraytugcu/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:."/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="java.vm.version" value="18+36-2087"/>
    <property name="sun.io.unicode.encoding" value="UnicodeBig"/>
    <property name="socksNonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="java.class.version" value="62.0"/>
  </properties>
  <testcase name="Verify The header" classname="Payment Gateway Functional Test" time="0.091">
    <error message="The step &apos;The user wants to go to Guru99Demo web page&apos; and 1 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;The user wants to go to Guru99Demo web page&quot;)&#10;public void the_user_wants_to_go_to_guru99demo_web_page() {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;The user wants to verify the header {string}&quot;)&#10;public void the_user_wants_to_verify_the_header(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.UndefinedStepException"><![CDATA[io.cucumber.junit.UndefinedStepException: 
The step 'The user wants to go to Guru99Demo web page' and 1 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("The user wants to go to Guru99Demo web page")
public void the_user_wants_to_go_to_guru99demo_web_page() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("The user wants to verify the header {string}")
public void the_user_wants_to_verify_the_header(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

]]></error>
    <system-out><![CDATA[&amp#27;[32m&amp#27;[1m┌───────────────────────────────────────────────────────────────────────────────────┐&amp#27;[0m
&amp#27;[32m&amp#27;[1m│&amp#27;[0m Share your Cucumber Report with your team at &amp#27;[36m&amp#27;[1m&amp#27;[4mhttps://reports.cucumber.io&amp#27;[0m          &amp#27;[32m&amp#27;[1m│&amp#27;[0m
&amp#27;[32m&amp#27;[1m│&amp#27;[0m Activate publishing with one of the following:                                    &amp#27;[32m&amp#27;[1m│&amp#27;[0m
&amp#27;[32m&amp#27;[1m│&amp#27;[0m                                                                                   &amp#27;[32m&amp#27;[1m│&amp#27;[0m
&amp#27;[32m&amp#27;[1m│&amp#27;[0m src/test/resources/cucumber.properties:          &amp#27;[36mcucumber.publish.enabled&amp#27;[0m=&amp#27;[36mtrue&amp#27;[0m    &amp#27;[32m&amp#27;[1m│&amp#27;[0m
&amp#27;[32m&amp#27;[1m│&amp#27;[0m src/test/resources/junit-platform.properties:    &amp#27;[36mcucumber.publish.enabled&amp#27;[0m=&amp#27;[36mtrue&amp#27;[0m    &amp#27;[32m&amp#27;[1m│&amp#27;[0m
&amp#27;[32m&amp#27;[1m│&amp#27;[0m Environment variable:                            &amp#27;[36mCUCUMBER_PUBLISH_ENABLED&amp#27;[0m=&amp#27;[36mtrue&amp#27;[0m    &amp#27;[32m&amp#27;[1m│&amp#27;[0m
&amp#27;[32m&amp#27;[1m│&amp#27;[0m JUnit:                                           &amp#27;[36m@CucumberOptions&amp#27;[0m(publish = &amp#27;[36mtrue&amp#27;[0m) &amp#27;[32m&amp#27;[1m│&amp#27;[0m
&amp#27;[32m&amp#27;[1m│&amp#27;[0m                                                                                   &amp#27;[32m&amp#27;[1m│&amp#27;[0m
&amp#27;[32m&amp#27;[1m│&amp#27;[0m More information at &amp#27;[36mhttps://cucumber.io/docs/cucumber/environment-variables/&amp#27;[0m      &amp#27;[32m&amp#27;[1m│&amp#27;[0m
&amp#27;[32m&amp#27;[1m│&amp#27;[0m                                                                                   &amp#27;[32m&amp#27;[1m│&amp#27;[0m
&amp#27;[32m&amp#27;[1m│&amp#27;[0m Disable this message with one of the following:                                   &amp#27;[32m&amp#27;[1m│&amp#27;[0m
&amp#27;[32m&amp#27;[1m│&amp#27;[0m                                                                                   &amp#27;[32m&amp#27;[1m│&amp#27;[0m
&amp#27;[32m&amp#27;[1m│&amp#27;[0m src/test/resources/cucumber.properties:          &amp#27;[36mcucumber.publish.quiet&amp#27;[0m=&amp#27;[36mtrue&amp#27;[0m      &amp#27;[32m&amp#27;[1m│&amp#27;[0m
&amp#27;[32m&amp#27;[1m│&amp#27;[0m src/test/resources/junit-platform.properties:    &amp#27;[36mcucumber.publish.quiet&amp#27;[0m=&amp#27;[36mtrue&amp#27;[0m      &amp#27;[32m&amp#27;[1m│&amp#27;[0m
&amp#27;[32m&amp#27;[1m└───────────────────────────────────────────────────────────────────────────────────┘&amp#27;[0m


@Smoke @TC01 @Regression
Scenario: Verify The header                                                       &amp#27;[90m# src/test/resources/Lab06.feature:4&amp#27;[0m
  &amp#27;[33mGiven &amp#27;[0m&amp#27;[33mThe user wants to go to Guru99Demo web page&amp#27;[0m
  &amp#27;[36mThen &amp#27;[0m&amp#27;[36mThe user wants to verify the header "Mother Elephant With Babies Soft Toy"&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Verify the toy price is 20$" classname="Payment Gateway Functional Test" time="0.005">
    <error message="The step &apos;The user wants to go to Guru99Demo web page&apos; and 1 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;The user wants to go to Guru99Demo web page&quot;)&#10;public void the_user_wants_to_go_to_guru99demo_web_page() {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;The user wants to verify that the toy price is {string}&quot;)&#10;public void the_user_wants_to_verify_that_the_toy_price_is(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.UndefinedStepException"><![CDATA[io.cucumber.junit.UndefinedStepException: 
The step 'The user wants to go to Guru99Demo web page' and 1 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("The user wants to go to Guru99Demo web page")
public void the_user_wants_to_go_to_guru99demo_web_page() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("The user wants to verify that the toy price is {string}")
public void the_user_wants_to_verify_that_the_toy_price_is(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

]]></error>
    <system-out><![CDATA[
@TC02 @Smoke @Regression
Scenario: Verify the toy price is 20$                              &amp#27;[90m# src/test/resources/Lab06.feature:9&amp#27;[0m
  &amp#27;[33mGiven &amp#27;[0m&amp#27;[33mThe user wants to go to Guru99Demo web page&amp#27;[0m
  &amp#27;[36mThen &amp#27;[0m&amp#27;[36mThe user wants to verify that the toy price is "Price: $20"&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Verify the Url contain “payment-gateway”" classname="Payment Gateway Functional Test" time="0.004">
    <error message="The step &apos;The user wants to go to Guru99Demo web page&apos; and 1 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;The user wants to go to Guru99Demo web page&quot;)&#10;public void the_user_wants_to_go_to_guru99demo_web_page() {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;The user wants to verify that Url contains {string}&quot;)&#10;public void the_user_wants_to_verify_that_url_contains(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.UndefinedStepException"><![CDATA[io.cucumber.junit.UndefinedStepException: 
The step 'The user wants to go to Guru99Demo web page' and 1 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("The user wants to go to Guru99Demo web page")
public void the_user_wants_to_go_to_guru99demo_web_page() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("The user wants to verify that Url contains {string}")
public void the_user_wants_to_verify_that_url_contains(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

]]></error>
    <system-out><![CDATA[
@TC03 @Smoke @Regression
Scenario: Verify the Url contain “payment-gateway”                  &amp#27;[90m# src/test/resources/Lab06.feature:14&amp#27;[0m
  &amp#27;[33mGiven &amp#27;[0m&amp#27;[33mThe user wants to go to Guru99Demo web page&amp#27;[0m
  &amp#27;[36mThen &amp#27;[0m&amp#27;[36mThe user wants to verify that Url contains "payment-gateway"&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Verify the the quantity as &quot;5&quot;" classname="Payment Gateway Functional Test" time="0.014">
    <error message="The step &apos;The user wants to go to Guru99Demo web page&apos; and 5 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;The user wants to go to Guru99Demo web page&quot;)&#10;public void the_user_wants_to_go_to_guru99demo_web_page() {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;The user wants to buy elephant toys as {string}&quot;)&#10;public void the_user_wants_to_buy_elephant_toys_as(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;The user wants to click pay now Button&quot;)&#10;public void the_user_wants_to_click_pay_now_button() {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;The user wants to enter payment information as&quot;)&#10;public void the_user_wants_to_enter_payment_information_as(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;The user wants to click on pay now button&quot;)&#10;public void the_user_wants_to_click_on_pay_now_button() {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;The user wants to verify message as {string}&quot;)&#10;public void the_user_wants_to_verify_message_as(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.UndefinedStepException"><![CDATA[io.cucumber.junit.UndefinedStepException: 
The step 'The user wants to go to Guru99Demo web page' and 5 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("The user wants to go to Guru99Demo web page")
public void the_user_wants_to_go_to_guru99demo_web_page() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("The user wants to buy elephant toys as {string}")
public void the_user_wants_to_buy_elephant_toys_as(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("The user wants to click pay now Button")
public void the_user_wants_to_click_pay_now_button() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("The user wants to enter payment information as")
public void the_user_wants_to_enter_payment_information_as(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Then("The user wants to click on pay now button")
public void the_user_wants_to_click_on_pay_now_button() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("The user wants to verify message as {string}")
public void the_user_wants_to_verify_message_as(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

]]></error>
    <system-out><![CDATA[
@TC04 @Regression
Scenario: Verify the the quantity as "5"                         &amp#27;[90m# src/test/resources/Lab06.feature:19&amp#27;[0m
  &amp#27;[33mGiven &amp#27;[0m&amp#27;[33mThe user wants to go to Guru99Demo web page&amp#27;[0m
  &amp#27;[36mWhen &amp#27;[0m&amp#27;[36mThe user wants to buy elephant toys as "5"&amp#27;[0m
  &amp#27;[36mThen &amp#27;[0m&amp#27;[36mThe user wants to click pay now Button&amp#27;[0m
  &amp#27;[36mAnd &amp#27;[0m&amp#27;[36mThe user wants to enter payment information as&amp#27;[0m
    | CardNumber      | 1111111111111111 |
    | ExpirationMonth | 12               |
    | ExpirationYear  | 2022             |
    | CVVCode         | 123              |
  &amp#27;[36mThen &amp#27;[0m&amp#27;[36mThe user wants to click on pay now button&amp#27;[0m
  &amp#27;[36mAnd &amp#27;[0m&amp#27;[36mThe user wants to verify message as "Payment successfull!"&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Verify the various quantity #1" classname="Payment Gateway Functional Test" time="0.014">
    <error message="The step &apos;The user wants to go to Guru99Demo web page&apos; and 7 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;The user wants to go to Guru99Demo web page&quot;)&#10;public void the_user_wants_to_go_to_guru99demo_web_page() {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;The user wants to verify the header {string}&quot;)&#10;public void the_user_wants_to_verify_the_header(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;The user wants to verify that the toy price is {string}&quot;)&#10;public void the_user_wants_to_verify_that_the_toy_price_is(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;The user wants to verify that Url contains {string}&quot;)&#10;public void the_user_wants_to_verify_that_url_contains(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;The user wants to add new {string}&quot;)&#10;public void the_user_wants_to_add_new(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;The user wants to enter payment information as&quot;)&#10;public void the_user_wants_to_enter_payment_information_as(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;The user wants to click on pay now button&quot;)&#10;public void the_user_wants_to_click_on_pay_now_button() {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;The user wants to verify message as {string}&quot;)&#10;public void the_user_wants_to_verify_message_as(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.UndefinedStepException"><![CDATA[io.cucumber.junit.UndefinedStepException: 
The step 'The user wants to go to Guru99Demo web page' and 7 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("The user wants to go to Guru99Demo web page")
public void the_user_wants_to_go_to_guru99demo_web_page() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("The user wants to verify the header {string}")
public void the_user_wants_to_verify_the_header(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("The user wants to verify that the toy price is {string}")
public void the_user_wants_to_verify_that_the_toy_price_is(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("The user wants to verify that Url contains {string}")
public void the_user_wants_to_verify_that_url_contains(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("The user wants to add new {string}")
public void the_user_wants_to_add_new(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("The user wants to enter payment information as")
public void the_user_wants_to_enter_payment_information_as(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Then("The user wants to click on pay now button")
public void the_user_wants_to_click_on_pay_now_button() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("The user wants to verify message as {string}")
public void the_user_wants_to_verify_message_as(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

]]></error>
    <system-out><![CDATA[
@Regression
Scenario Outline: Verify the various quantity                                     &amp#27;[90m# src/test/resources/Lab06.feature:47&amp#27;[0m
  &amp#27;[33mGiven &amp#27;[0m&amp#27;[33mThe user wants to go to Guru99Demo web page&amp#27;[0m
  &amp#27;[36mWhen &amp#27;[0m&amp#27;[36mThe user wants to verify the header "Mother Elephant With Babies Soft Toy"&amp#27;[0m
  &amp#27;[36mThen &amp#27;[0m&amp#27;[36mThe user wants to verify that the toy price is "Price: $20"&amp#27;[0m
  &amp#27;[36mThen &amp#27;[0m&amp#27;[36mThe user wants to verify that Url contains "payment-gateway"&amp#27;[0m
  &amp#27;[36mAnd &amp#27;[0m&amp#27;[36mThe user wants to add new "5"&amp#27;[0m
  &amp#27;[36mAnd &amp#27;[0m&amp#27;[36mThe user wants to enter payment information as&amp#27;[0m
    | CardNumber      | 5823698521478522 |
    | ExpirationMonth | 05               |
    | ExpirationYear  | 2028             |
    | CVVCode         | 256              |
  &amp#27;[36mThen &amp#27;[0m&amp#27;[36mThe user wants to click on pay now button&amp#27;[0m
  &amp#27;[36mAnd &amp#27;[0m&amp#27;[36mThe user wants to verify message as "Payment successfull!"&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Verify the various quantity #2" classname="Payment Gateway Functional Test" time="0.012">
    <error message="The step &apos;The user wants to go to Guru99Demo web page&apos; and 7 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;The user wants to go to Guru99Demo web page&quot;)&#10;public void the_user_wants_to_go_to_guru99demo_web_page() {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;The user wants to verify the header {string}&quot;)&#10;public void the_user_wants_to_verify_the_header(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;The user wants to verify that the toy price is {string}&quot;)&#10;public void the_user_wants_to_verify_that_the_toy_price_is(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;The user wants to verify that Url contains {string}&quot;)&#10;public void the_user_wants_to_verify_that_url_contains(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;The user wants to add new {string}&quot;)&#10;public void the_user_wants_to_add_new(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;The user wants to enter payment information as&quot;)&#10;public void the_user_wants_to_enter_payment_information_as(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;The user wants to click on pay now button&quot;)&#10;public void the_user_wants_to_click_on_pay_now_button() {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;The user wants to verify message as {string}&quot;)&#10;public void the_user_wants_to_verify_message_as(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.UndefinedStepException"><![CDATA[io.cucumber.junit.UndefinedStepException: 
The step 'The user wants to go to Guru99Demo web page' and 7 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("The user wants to go to Guru99Demo web page")
public void the_user_wants_to_go_to_guru99demo_web_page() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("The user wants to verify the header {string}")
public void the_user_wants_to_verify_the_header(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("The user wants to verify that the toy price is {string}")
public void the_user_wants_to_verify_that_the_toy_price_is(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("The user wants to verify that Url contains {string}")
public void the_user_wants_to_verify_that_url_contains(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("The user wants to add new {string}")
public void the_user_wants_to_add_new(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("The user wants to enter payment information as")
public void the_user_wants_to_enter_payment_information_as(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Then("The user wants to click on pay now button")
public void the_user_wants_to_click_on_pay_now_button() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("The user wants to verify message as {string}")
public void the_user_wants_to_verify_message_as(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

]]></error>
    <system-out><![CDATA[
@Regression
Scenario Outline: Verify the various quantity                                     &amp#27;[90m# src/test/resources/Lab06.feature:48&amp#27;[0m
  &amp#27;[33mGiven &amp#27;[0m&amp#27;[33mThe user wants to go to Guru99Demo web page&amp#27;[0m
  &amp#27;[36mWhen &amp#27;[0m&amp#27;[36mThe user wants to verify the header "Mother Elephant With Babies Soft Toy"&amp#27;[0m
  &amp#27;[36mThen &amp#27;[0m&amp#27;[36mThe user wants to verify that the toy price is "Price: $20"&amp#27;[0m
  &amp#27;[36mThen &amp#27;[0m&amp#27;[36mThe user wants to verify that Url contains "payment-gateway"&amp#27;[0m
  &amp#27;[36mAnd &amp#27;[0m&amp#27;[36mThe user wants to add new "8"&amp#27;[0m
  &amp#27;[36mAnd &amp#27;[0m&amp#27;[36mThe user wants to enter payment information as&amp#27;[0m
    | CardNumber      | 5823698521478522 |
    | ExpirationMonth | 05               |
    | ExpirationYear  | 2028             |
    | CVVCode         | 256              |
  &amp#27;[36mThen &amp#27;[0m&amp#27;[36mThe user wants to click on pay now button&amp#27;[0m
  &amp#27;[36mAnd &amp#27;[0m&amp#27;[36mThe user wants to verify message as "Payment successfull!"&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Verify the various quantity #3" classname="Payment Gateway Functional Test" time="0.011">
    <error message="The step &apos;The user wants to go to Guru99Demo web page&apos; and 7 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;The user wants to go to Guru99Demo web page&quot;)&#10;public void the_user_wants_to_go_to_guru99demo_web_page() {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;The user wants to verify the header {string}&quot;)&#10;public void the_user_wants_to_verify_the_header(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;The user wants to verify that the toy price is {string}&quot;)&#10;public void the_user_wants_to_verify_that_the_toy_price_is(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;The user wants to verify that Url contains {string}&quot;)&#10;public void the_user_wants_to_verify_that_url_contains(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;The user wants to add new {string}&quot;)&#10;public void the_user_wants_to_add_new(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;The user wants to enter payment information as&quot;)&#10;public void the_user_wants_to_enter_payment_information_as(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;The user wants to click on pay now button&quot;)&#10;public void the_user_wants_to_click_on_pay_now_button() {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;The user wants to verify message as {string}&quot;)&#10;public void the_user_wants_to_verify_message_as(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.UndefinedStepException"><![CDATA[io.cucumber.junit.UndefinedStepException: 
The step 'The user wants to go to Guru99Demo web page' and 7 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("The user wants to go to Guru99Demo web page")
public void the_user_wants_to_go_to_guru99demo_web_page() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("The user wants to verify the header {string}")
public void the_user_wants_to_verify_the_header(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("The user wants to verify that the toy price is {string}")
public void the_user_wants_to_verify_that_the_toy_price_is(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("The user wants to verify that Url contains {string}")
public void the_user_wants_to_verify_that_url_contains(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("The user wants to add new {string}")
public void the_user_wants_to_add_new(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("The user wants to enter payment information as")
public void the_user_wants_to_enter_payment_information_as(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Then("The user wants to click on pay now button")
public void the_user_wants_to_click_on_pay_now_button() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("The user wants to verify message as {string}")
public void the_user_wants_to_verify_message_as(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

]]></error>
    <system-out><![CDATA[
@Regression
Scenario Outline: Verify the various quantity                                     &amp#27;[90m# src/test/resources/Lab06.feature:49&amp#27;[0m
  &amp#27;[33mGiven &amp#27;[0m&amp#27;[33mThe user wants to go to Guru99Demo web page&amp#27;[0m
  &amp#27;[36mWhen &amp#27;[0m&amp#27;[36mThe user wants to verify the header "Mother Elephant With Babies Soft Toy"&amp#27;[0m
  &amp#27;[36mThen &amp#27;[0m&amp#27;[36mThe user wants to verify that the toy price is "Price: $20"&amp#27;[0m
  &amp#27;[36mThen &amp#27;[0m&amp#27;[36mThe user wants to verify that Url contains "payment-gateway"&amp#27;[0m
  &amp#27;[36mAnd &amp#27;[0m&amp#27;[36mThe user wants to add new "9"&amp#27;[0m
  &amp#27;[36mAnd &amp#27;[0m&amp#27;[36mThe user wants to enter payment information as&amp#27;[0m
    | CardNumber      | 5823698521478522 |
    | ExpirationMonth | 05               |
    | ExpirationYear  | 2028             |
    | CVVCode         | 256              |
  &amp#27;[36mThen &amp#27;[0m&amp#27;[36mThe user wants to click on pay now button&amp#27;[0m
  &amp#27;[36mAnd &amp#27;[0m&amp#27;[36mThe user wants to verify message as "Payment successfull!"&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Verify the various quantity #4" classname="Payment Gateway Functional Test" time="0.018">
    <error message="The step &apos;The user wants to go to Guru99Demo web page&apos; and 7 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;The user wants to go to Guru99Demo web page&quot;)&#10;public void the_user_wants_to_go_to_guru99demo_web_page() {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;The user wants to verify the header {string}&quot;)&#10;public void the_user_wants_to_verify_the_header(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;The user wants to verify that the toy price is {string}&quot;)&#10;public void the_user_wants_to_verify_that_the_toy_price_is(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;The user wants to verify that Url contains {string}&quot;)&#10;public void the_user_wants_to_verify_that_url_contains(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;The user wants to add new {string}&quot;)&#10;public void the_user_wants_to_add_new(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;The user wants to enter payment information as&quot;)&#10;public void the_user_wants_to_enter_payment_information_as(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;The user wants to click on pay now button&quot;)&#10;public void the_user_wants_to_click_on_pay_now_button() {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;The user wants to verify message as {string}&quot;)&#10;public void the_user_wants_to_verify_message_as(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.UndefinedStepException"><![CDATA[io.cucumber.junit.UndefinedStepException: 
The step 'The user wants to go to Guru99Demo web page' and 7 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("The user wants to go to Guru99Demo web page")
public void the_user_wants_to_go_to_guru99demo_web_page() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("The user wants to verify the header {string}")
public void the_user_wants_to_verify_the_header(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("The user wants to verify that the toy price is {string}")
public void the_user_wants_to_verify_that_the_toy_price_is(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("The user wants to verify that Url contains {string}")
public void the_user_wants_to_verify_that_url_contains(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("The user wants to add new {string}")
public void the_user_wants_to_add_new(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("The user wants to enter payment information as")
public void the_user_wants_to_enter_payment_information_as(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Then("The user wants to click on pay now button")
public void the_user_wants_to_click_on_pay_now_button() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("The user wants to verify message as {string}")
public void the_user_wants_to_verify_message_as(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

]]></error>
    <system-out><![CDATA[
@Regression
Scenario Outline: Verify the various quantity                                     &amp#27;[90m# src/test/resources/Lab06.feature:50&amp#27;[0m
  &amp#27;[33mGiven &amp#27;[0m&amp#27;[33mThe user wants to go to Guru99Demo web page&amp#27;[0m
  &amp#27;[36mWhen &amp#27;[0m&amp#27;[36mThe user wants to verify the header "Mother Elephant With Babies Soft Toy"&amp#27;[0m
  &amp#27;[36mThen &amp#27;[0m&amp#27;[36mThe user wants to verify that the toy price is "Price: $20"&amp#27;[0m
  &amp#27;[36mThen &amp#27;[0m&amp#27;[36mThe user wants to verify that Url contains "payment-gateway"&amp#27;[0m
  &amp#27;[36mAnd &amp#27;[0m&amp#27;[36mThe user wants to add new "2"&amp#27;[0m
  &amp#27;[36mAnd &amp#27;[0m&amp#27;[36mThe user wants to enter payment information as&amp#27;[0m
    | CardNumber      | 5823698521478522 |
    | ExpirationMonth | 05               |
    | ExpirationYear  | 2028             |
    | CVVCode         | 256              |
  &amp#27;[36mThen &amp#27;[0m&amp#27;[36mThe user wants to click on pay now button&amp#27;[0m
  &amp#27;[36mAnd &amp#27;[0m&amp#27;[36mThe user wants to verify message as "Payment successfull!"&amp#27;[0m
]]></system-out>
  </testcase>
  <testcase name="Verify the various quantity #5" classname="Payment Gateway Functional Test" time="0.011">
    <error message="The step &apos;The user wants to go to Guru99Demo web page&apos; and 7 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;The user wants to go to Guru99Demo web page&quot;)&#10;public void the_user_wants_to_go_to_guru99demo_web_page() {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;The user wants to verify the header {string}&quot;)&#10;public void the_user_wants_to_verify_the_header(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;The user wants to verify that the toy price is {string}&quot;)&#10;public void the_user_wants_to_verify_that_the_toy_price_is(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;The user wants to verify that Url contains {string}&quot;)&#10;public void the_user_wants_to_verify_that_url_contains(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;The user wants to add new {string}&quot;)&#10;public void the_user_wants_to_add_new(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;The user wants to enter payment information as&quot;)&#10;public void the_user_wants_to_enter_payment_information_as(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;The user wants to click on pay now button&quot;)&#10;public void the_user_wants_to_click_on_pay_now_button() {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;The user wants to verify message as {string}&quot;)&#10;public void the_user_wants_to_verify_message_as(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.UndefinedStepException"><![CDATA[io.cucumber.junit.UndefinedStepException: 
The step 'The user wants to go to Guru99Demo web page' and 7 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("The user wants to go to Guru99Demo web page")
public void the_user_wants_to_go_to_guru99demo_web_page() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("The user wants to verify the header {string}")
public void the_user_wants_to_verify_the_header(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("The user wants to verify that the toy price is {string}")
public void the_user_wants_to_verify_that_the_toy_price_is(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("The user wants to verify that Url contains {string}")
public void the_user_wants_to_verify_that_url_contains(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("The user wants to add new {string}")
public void the_user_wants_to_add_new(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("The user wants to enter payment information as")
public void the_user_wants_to_enter_payment_information_as(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Then("The user wants to click on pay now button")
public void the_user_wants_to_click_on_pay_now_button() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("The user wants to verify message as {string}")
public void the_user_wants_to_verify_message_as(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

]]></error>
    <system-out><![CDATA[
@Regression
Scenario Outline: Verify the various quantity                                     &amp#27;[90m# src/test/resources/Lab06.feature:51&amp#27;[0m
  &amp#27;[33mGiven &amp#27;[0m&amp#27;[33mThe user wants to go to Guru99Demo web page&amp#27;[0m
  &amp#27;[36mWhen &amp#27;[0m&amp#27;[36mThe user wants to verify the header "Mother Elephant With Babies Soft Toy"&amp#27;[0m
  &amp#27;[36mThen &amp#27;[0m&amp#27;[36mThe user wants to verify that the toy price is "Price: $20"&amp#27;[0m
  &amp#27;[36mThen &amp#27;[0m&amp#27;[36mThe user wants to verify that Url contains "payment-gateway"&amp#27;[0m
  &amp#27;[36mAnd &amp#27;[0m&amp#27;[36mThe user wants to add new "4"&amp#27;[0m
  &amp#27;[36mAnd &amp#27;[0m&amp#27;[36mThe user wants to enter payment information as&amp#27;[0m
    | CardNumber      | 5823698521478522 |
    | ExpirationMonth | 05               |
    | ExpirationYear  | 2028             |
    | CVVCode         | 256              |
  &amp#27;[36mThen &amp#27;[0m&amp#27;[36mThe user wants to click on pay now button&amp#27;[0m
  &amp#27;[36mAnd &amp#27;[0m&amp#27;[36mThe user wants to verify message as "Payment successfull!"&amp#27;[0m
]]></system-out>
  </testcase>
</testsuite>